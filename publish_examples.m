%%publish_examples.m
% publish exmples in markdown format.
% note that running this script will set plot defaults at the global level
close all
clear
clc

%% constants
lightOpts = {    
    "defaultFigureColor", "w", ...
    "defaultAxesColor", "w", ...
    "defaultAxesXColor", [0.15, 0.15, 0.15], ...
    "defaultAxesYColor", [0.15, 0.15, 0.15], ...
    "defaultAxesGridColor", [0.15, 0.15, 0.15], ...
    "defaultAxesXGrid", "on", ...
    "defaultAxesYGrid", "on", ...
    "defaultAxesBox", "on", ...
    "defaultTextColor", [0.15, 0.15, 0.15], ...
    "defaultAxesFontSize", 11, ...
    "defaultErrorBarLineWidth", 1.5, ...
    "defaultLineLineWidth", 1.5, ...
    "defaultLineMarkerFaceColor", "w", ...
    "defaultAxesLineWidth", 1.5, ...
    "defaultAxesGridLineWidth", 1.0, ...
    "defaultAxesGridAlpha", 0.3, ...
    "defaultBarFaceAlpha", 0.7, ...
    "defaultBarEdgeColor", [0.15, 0.15, 0.15]};
darkOpts = {
    "defaultFigureColor", "k", ...
    "defaultAxesColor", [1,1,1].*20/255, ...
    "defaultAxesXColor", [1,1,1].*230/255, ...
    "defaultAxesYColor", [1,1,1].*230/255, ...
    "defaultAxesGridColor", [1,1,1].*230/255, ...
    "defaultAxesXGrid", "on", ...
    "defaultAxesYGrid", "on", ...
    "defaultAxesBox", "on", ...
    "defaultTextColor", [1,1,1].*230/255, ...
    "defaultAxesFontSize", 11, ...
    "defaultErrorBarLineWidth", 1.5, ...
    "defaultLineLineWidth", 1.5, ...
    "defaultLineMarkerFaceColor", [1,1,1].*20/255, ...
    "defaultAxesLineWidth", 1.5, ...
    "defaultAxesGridLineWidth", 1.0, ...
    "defaultAxesGridAlpha", 0.3, ...
    "defaultBarFaceAlpha", 0.7, ...
    "defaultBarEdgeColor",[1,1,1].*230/255};

%% list all examples
exfiles = dir("example*.mlx");

%% publish as markdown
for i = 1:length(exfiles)
    % start fresh
    [~, fileNoExt, ~] = fileparts(exfiles(i).name);
    mediaDir = string(fileNoExt) + "_media";
    if exist(mediaDir, "dir")
        rmdir(mediaDir, "s");
    end

    % run export with light figures
    set(0, lightOpts{:});
    export(fullfile(exfiles(i).folder, exfiles(i).name), ...
        Format="markdown", ...
        IncludeOutputs=true, ...
        Run=true, ...
        FigureFormat="png");

    % make figures transparent
    figs = dir(fullfile(mediaDir, "*.png"));
    for j = 1:length(figs)
        tempName = fullfile(figs(j).folder, figs(j).name);
        imdata = imread(tempName);
        a = double(imdata)./255.0;
        cref = reshape([1,1,1], [1, 1, 3]);
        alpha = ones(size(a, [1, 2]));
        idx = all(a == cref, 3);
        alpha(idx) = 0;
        imwrite(a, tempName, Alpha=alpha);
    end
    
    % move figures
    mediaDirLight = fullfile(mediaDir, "light");
    if exist(mediaDirLight, "dir")
        rmdir(mediaDirLight, "s");
    end
    mkdir(mediaDirLight);
    movefile(fullfile(mediaDir, "*.png"), mediaDirLight);
    
    % run export with dark figures
    set(0, darkOpts{:});
    [~, fileNoExt, ~] = fileparts(exfiles(i).name);
    mediaDir = string(fileNoExt) + "_media";
    export(fullfile(exfiles(i).folder, exfiles(i).name), ...
        Format="markdown", ...
        IncludeOutputs=true, ...
        Run=true, ...
        FigureFormat="png");
    
    % make figures transparent
    figs = dir(fullfile(mediaDir, "*.png"));
    for j = 1:length(figs)
        tempName = fullfile(figs(j).folder, figs(j).name);
        imdata = imread(tempName);
        a = double(imdata)./255.0;
        cref = reshape([0, 0, 0], [1, 1, 3]);
        cref2 = reshape([1, 1, 1], [1, 1, 3]);
        alpha = ones(size(a, [1, 2]));
        idx = all(a == cref | a == cref2, 3);
        alpha(idx) = 0;
        alpha = smoothdata2(alpha, "gaussian", 5);
        imwrite(a, tempName, Alpha=alpha);
    end
    
    % move figures
    mediaDirDark = fullfile(mediaDir, "dark");
    if exist(mediaDirDark, "dir")
        rmdir(mediaDirDark, "s");
    end
    mkdir(mediaDirDark );
    movefile(fullfile(mediaDir, "*.png"), mediaDirDark);

    % edit markdown file to jump from light to dark plots
    filename = fullfile(exfiles(i).folder, fileNoExt + ".md");
    mdtext = readlines(filename);
    mdtext2 = regexprep(mdtext, ...
        "!\[(figure_\d+\.png)\]\((\w+)\/\1\)", ...
        "<picture>\r\n" + ...
        "  <source media\=""\(prefers-color-scheme: dark\)"" srcset\=""$2\/dark\/$1"">\r\n " + ...
        "  <source media\=""\(prefers-color-scheme: light\)"" srcset\=""$2\/light\/$1"">\r\n " + ...
        "  <img alt\=""$1"" src\=""$2\/light\/$1"">\r\n" + ...
        "<\/picture>\r\n");
    writelines(mdtext2, filename);
end
