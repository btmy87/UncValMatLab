# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: 
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configure Matlab
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2
        with: 
          release: R2024a
          cache: true

      # Run tests
      - name: Run tests
        uses: matlab-actions/run-command@v2
        with:
          command: workflow_ci

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/results.xml

      - name: Upload code coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: test-results/coverage.xml

      - name: Get test summary from json
        if: always()
        id: getParams
        shell: bash
        run: |
           content=`cat test-results/summary.json`
           content="${content//'%'/'%25'}"
           content="${content//$'\n'/'%0A'}"
           content="${content//$'\r'/'%0D'}"
           echo "summaryJson=$content" >> "$GITHUB_OUTPUT"

      - name: Dynamic Badge Test Results
        if: always()
        uses: schneegans/dynamic-badges-action@v1.7.0
        with: 
          auth: ${{ secrets.DYNAMIC_BADGE_SECRET }}
          gistID: abf84875ed00c29442dd86871ea752f8
          filename: badge_uncval_test.svg
          label: Tests Passed
          message: ${{fromJson(steps.getParams.outputs.summaryJson).CI_TEST_PASSED}}
          color: ${{fromJson(steps.getParams.outputs.summaryJson).CI_TEST_COLOR}}
      
      - name: Dynamic Badge Coverage Results
        if: always()
        uses: schneegans/dynamic-badges-action@v1.7.0
        with: 
          auth: ${{ secrets.DYNAMIC_BADGE_SECRET }}
          gistID: 0352238dc7d3d89e52a6e67fda5a6578
          filename: badge_uncval_coverage.svg
          label: Coverage
          message: ${{fromJson(steps.getParams.outputs.summaryJson).CI_COVERAGE}}
          color: ${{fromJson(steps.getParams.outputs.summaryJson).CI_COVERAGE_COLOR}}


